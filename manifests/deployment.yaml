# Deployment for DumbKV application using PostgreSQL backend
# Can now scale to multiple replicas with shared PostgreSQL database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dumbkv
  labels:
    app: dumbkv
spec:
  # Single replica deployment for simplicity - can be expanded if a rolling deployment strategy is preferred.
  replicas: 1
  # Recreate strategy for simple deployments
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: dumbkv
  template:
    metadata:
      labels:
        app: dumbkv
    spec:
      containers:
      - name: dumbkv
        # Update this to your actual image once built and pushed
        image: dumbkv:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        # Configure for PostgreSQL backend
        - name: DATABASE_LOCATION
          value: "postgresql://dumbkv_user:dumbkv_password@postgres-service:5432/dumbkv"
        - name: DATABASE_TYPE
          value: "postgres"
        # Health check configuration
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # Resource limits for stable operation
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        # No volume mounts needed for PostgreSQL backend
